let playerClass = "";
let playerHP = 100;
let enemyHP = 100;
let isDefending = false;

function selectClass(chosenClass) {
  playerClass = chosenClass;
  playerHP = 100;
  enemyHP = 100;
  isDefending = false;

  document.getElementById("class-selection").style.display = "none";
  document.getElementById("actions").style.display = "block";
  document.getElementById("city").style.display = "none";

  document.getElementById("class-title").textContent = `–ö–ª–∞—Å—Å: ${playerClass}`;
  updateHP();
  log(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–ª–∞—Å—Å: ${playerClass}`);
}

function attack() {
  const damage = getRandom(15, 25);
  enemyHP -= damage;
  log(`–í—ã –Ω–∞–Ω–µ—Å–ª–∏ ${damage} —É—Ä–æ–Ω–∞ –≤—Ä–∞–≥—É.`);
  checkBattleEnd();
  if (enemyHP > 0) {
    enemyAttack();
  }
  updateHP();
}

function defend() {
  isDefending = true;
  log("–í—ã –≤—Å—Ç–∞–ª–∏ –≤ –∑–∞—â–∏—Ç—É. –£—Ä–æ–Ω –ø–æ –≤–∞–º –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–µ–Ω.");
  enemyAttack();
  updateHP();
}

function enemyAttack() {
  let damage = getRandom(10, 20);
  if (isDefending) {
    damage = Math.floor(damage / 2);
    isDefending = false;
  }
  playerHP -= damage;
  logAppend(`–í—Ä–∞–≥ –∞—Ç–∞–∫—É–µ—Ç –∏ –Ω–∞–Ω–æ—Å–∏—Ç ${damage} —É—Ä–æ–Ω–∞ –≤–∞–º.`);
  checkBattleEnd();
}

function showStatus() {
  log(`–ö–ª–∞—Å—Å: ${playerClass}\n–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: ${playerHP}\n–ó–¥–æ—Ä–æ–≤—å–µ –≤—Ä–∞–≥–∞: ${enemyHP}`);
}

function updateHP() {
  document.getElementById("player-hp").textContent = Math.max(playerHP, 0);
  document.getElementById("enemy-hp").textContent = Math.max(enemyHP, 0);
}

function checkBattleEnd() {
  if (playerHP <= 0) {
    log("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! ü™¶");
    disableButtons();
  } else if (enemyHP <= 0) {
    log("–í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤—Ä–∞–≥–∞! üéâ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥...");
    disableButtons();
    setTimeout(goToCity, 2000);
  }
}

function disableButtons() {
  const buttons = document.querySelectorAll("#actions button");
  buttons.forEach(btn => btn.disabled = true);
}

function log(text) {
  document.getElementById("log").textContent = text;
}

function logAppend(text) {
  const current = document.getElementById("log").textContent;
  document.getElementById("log").textContent = current + "\n" + text;
}

function getRandom(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function goToCity() {
  document.getElementById("actions").style.display = "none";
  document.getElementById("city").style.display = "block";
  document.getElementById("log").textContent = "";
}

function rest() {
  playerHP = 100;
  updateHP();
  document.getElementById("city-log").textContent = "–í—ã —Ö–æ—Ä–æ—à–æ –æ—Ç–¥–æ—Ö–Ω—É–ª–∏. –ó–¥–æ—Ä–æ–≤—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.";
}

function shop() {
  document.getElementById("city-log").textContent = "–ú–∞–≥–∞–∑–∏–Ω –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è —Ç–æ–≤–∞—Ä—ã.";
}

function startQuest() {
  playerHP = 100;
  enemyHP = 100;
  isDefending = false;

  document.getElementById("city").style.display = "none";
  document.getElementById("actions").style.display = "block";

  const buttons = document.querySelectorAll("#actions button");
  buttons.forEach(btn => btn.disabled = false);

  document.getElementById("class-title").textContent = `–ö–ª–∞—Å—Å: ${playerClass}`;
  updateHP();
  log("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –Ω–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!");
}